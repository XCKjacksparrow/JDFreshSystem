{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\学习\\17-21 Vue.js项目实战开发\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\学习\\17-21 Vue.js项目实战开发\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\src\\components\\goods\\Params.vue?vue&type=template&id=8c7b49e2&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\学习\\17-21 Vue.js项目实战开发\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\src\\components\\goods\\Params.vue","mtime":1576427849861},{"path":"C:\\Users\\Administrator\\Desktop\\学习\\17-21 Vue.js项目实战开发\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\学习\\17-21 Vue.js项目实战开发\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\学习\\17-21 Vue.js项目实战开发\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\学习\\17-21 Vue.js项目实战开发\\20-21vue电商\\3.vue-项目实战day1\\code\\vue_shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div>\n  <!-- 面包屑导航区域 -->\n  <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n    <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n    <el-breadcrumb-item>商品管理</el-breadcrumb-item>\n    <el-breadcrumb-item>参数列表</el-breadcrumb-item>\n  </el-breadcrumb>\n\n  <el-card>\n    <!-- 警告区域 -->\n    <el-alert show-icon title=\"注意：只允许为第三级分类设置相关参数！\" type=\"warning\" :closable=\"false\"></el-alert>\n\n    <!-- 选择商品分类区域 -->\n    <el-row class=\"cat_opt\">\n      <el-col>\n        <span>选择商品分类：</span>\n        <!-- 选择商品分类的级联选择框 -->\n        <el-cascader\n          expand-trigger=\"hover\"\n          :options=\"catelist\"\n          :props=\"cateProps\"\n          v-model=\"selectedCateKeys\"\n          @change=\"handleChange\"\n        ></el-cascader>\n      </el-col>\n    </el-row>\n\n    <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\n      <el-tab-pane label=\"动态参数\" name=\"many\">\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          :disabled=\"isBtnDisabled\"\n          @click=\"addDialogVisible=true\"\n        >添加参数</el-button>\n        <!-- 动态参数表格 -->\n        <el-table :data=\"manylist\" border stripe>\n          <!-- 展开行 -->\n          <el-table-column type=\"expand\">\n            <template slot-scope=\"scope\">\n              <!-- 循环渲染Tag标签 -->\n              <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\n              <!-- 输入的文本框 -->\n              <el-input\n                class=\"input-new-tag\"\n                v-if=\"scope.row.inputVisible\"\n                v-model=\"scope.row.inputValue\"\n                ref=\"saveTagInput\"\n                size=\"small\"\n                @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                @blur=\"handleInputConfirm(scope.row)\"\n              ></el-input>\n              <!-- 添加按钮 -->\n              <el-button\n                v-else\n                class=\"button-new-tag\"\n                size=\"small\"\n                @click=\"showInput(scope.row)\"\n              >+ New Tag</el-button>\n            </template>\n          </el-table-column>\n          <!-- 索引列 -->\n          <el-table-column type=\"index\"></el-table-column>\n          <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\n          <el-table-column label=\"操作\">\n            <template slot-scope=\"scope\">\n              <el-button\n                size=\"mini\"\n                type=\"primary\"\n                icon=\"el-icon-edit\"\n                @click=\"showEditDialog(scope.row.attr_id)\"\n              >编辑</el-button>\n              <el-button\n                size=\"mini\"\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                @click=\"removeParams(scope.row.attr_id)\"\n              >删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n      <el-tab-pane label=\"静态属性\" name=\"only\">\n        <el-button\n          type=\"primary\"\n          size=\"mini\"\n          :disabled=\"isBtnDisabled\"\n          @click=\"addDialogVisible=true\"\n        >添加属性</el-button>\n        <el-table :data=\"manylist\" border stripe>\n          <!-- 展开行 -->\n          <el-table-column type=\"expand\">\n            <template slot-scope=\"scope\">\n              <!-- 循环渲染Tag标签 -->\n              <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\n              <!-- 输入的文本框 -->\n              <el-input\n                class=\"input-new-tag\"\n                v-if=\"scope.row.inputVisible\"\n                v-model=\"scope.row.inputValue\"\n                ref=\"saveTagInput\"\n                size=\"small\"\n                @keyup.enter.native=\"handleInputConfirm(scope.row)\"\n                @blur=\"handleInputConfirm(scope.row)\"\n              ></el-input>\n              <!-- 添加按钮 -->\n              <el-button\n                v-else\n                class=\"button-new-tag\"\n                size=\"small\"\n                @click=\"showInput(scope.row)\"\n              >+ New Tag</el-button>\n            </template>\n         \n          </el-table-column>\n          <!-- 索引列 -->\n          <el-table-column type=\"index\"></el-table-column>\n          <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\n          <el-table-column label=\"操作\">\n            <template slot-scope=\"scope\">\n              <el-button\n                size=\"mini\"\n                type=\"primary\"\n                icon=\"el-icon-edit\"\n                @click=\"showEditDialog(scope.row.attr_id)\"\n              >编辑</el-button>\n              <el-button\n                size=\"mini\"\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                @click=\"removeParams(scope.row.attr_id)\"\n              >删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-tab-pane>\n    </el-tabs>\n  </el-card>\n\n  <!-- 添加参数的对话框 -->\n  <el-dialog\n    :title=\"'添加' + titleText\"\n    :visible.sync=\"addDialogVisible\"\n    width=\"50%\"\n    @close=\"addDialogClosed\"\n  >\n    <!-- 添加参数的对话框 -->\n    <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n      <el-form-item :label=\"titleText\" prop=\"attr_name\">\n        <el-input v-model=\"addForm.attr_name\"></el-input>\n      </el-form-item>\n    </el-form>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\n    </span>\n  </el-dialog>\n\n  <!-- 修改参数的对话框 -->\n  <el-dialog\n    :title=\"'修改' + titleText\"\n    :visible.sync=\"editDialogVisible\"\n    width=\"50%\"\n    @close=\"editDialogClosed\"\n  >\n    <!-- 添加参数的对话框 -->\n    <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n      <el-form-item :label=\"titleText\" prop=\"attr_name\">\n        <el-input v-model=\"editForm.attr_name\"></el-input>\n      </el-form-item>\n    </el-form>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\n    </span>\n  </el-dialog>\n</div>\n",null]}